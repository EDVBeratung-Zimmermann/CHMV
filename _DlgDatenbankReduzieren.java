/*
 *
 * Das JAVA-Programm Miles-Verlag Verlagsverwaltung stellt alle notwendigen
 * Funktionen für die Verwaltung des Carola Hartman Miles-Verlags bereit.
 *
 * Copyright (C) 2017 EDV-Beratung und Betrieb, Entwicklung von SOftware
 *                    Dipl.Inform Thomas Zimmermann
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package milesVerlagMain;

import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import com.toedter.calendar.*;
import java.sql.ResultSet;

/**
 *
 * @author Thomas Zimmermann
 */
public class _DlgDatenbankReduzieren extends javax.swing.JDialog {

    /**
     * Creates new form _DlgTabellenErstellen
     *
     * @param parent
     * @param modal
     */
    public _DlgDatenbankReduzieren(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            Class.forName(ModulHelferlein.dbDriver);
        } catch (ClassNotFoundException exept) {
            ModulHelferlein.Fehlermeldung("Tabellen erstellen",
                    "ClassNotFoundException: Treiber nicht gefunden: "
                    , exept.getMessage());
        }

        // Verbindung zur Datenbank über die JDBC-Brücke
        try {
            conn = DriverManager.getConnection(ModulHelferlein.dbUrl, ModulHelferlein.dbUser, ModulHelferlein.dbPassword);
        } catch (SQLException exept) {
            ModulHelferlein.Fehlermeldung("Tabellen erstellen",
                    "SQL-Excetion: Verbindung nicht moeglich: "
                    , exept.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        panel1 = new JPanel();
        jLabel4 = new JLabel();
        jLabel2 = new JLabel();
        jButtonEnde = new JButton();
        jButtonSchliessen = new JButton();
        label1 = new JLabel();
        jDateChooser = new JDateChooser();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Carola Hartmann Miles Verlag");
        setResizable(false);
        setFont(new Font(Font.DIALOG, Font.BOLD, 12));
        setMinimumSize(new Dimension(560, 400));
        var contentPane = getContentPane();

        //======== panel1 ========
        {
            panel1.setMinimumSize(new Dimension(560, 400));
            panel1.setLayout(null);

            //---- jLabel4 ----
            jLabel4.setFont(new Font("Tahoma", Font.BOLD, 12));
            jLabel4.setText("Reduzieren der Datenbank");
            panel1.add(jLabel4);
            jLabel4.setBounds(new Rectangle(new Point(0, 0), jLabel4.getPreferredSize()));

            //---- jLabel2 ----
            jLabel2.setText("L\u00f6schen von Datens\u00e4tzen ");
            jLabel2.setToolTipText("");
            panel1.add(jLabel2);
            jLabel2.setBounds(5, 30, 183, 25);

            //---- jButtonEnde ----
            jButtonEnde.setText("Reduzieren");
            jButtonEnde.addActionListener(e -> jButtonReduzierenActionPerformed(e));
            panel1.add(jButtonEnde);
            jButtonEnde.setBounds(75, 110, 183, jButtonEnde.getPreferredSize().height);

            //---- jButtonSchliessen ----
            jButtonSchliessen.setText("Schlie\u00dfen");
            jButtonSchliessen.addActionListener(e -> jButtonSchliessenActionPerformed(e));
            panel1.add(jButtonSchliessen);
            jButtonSchliessen.setBounds(270, 110, 159, jButtonSchliessen.getPreferredSize().height);

            //---- label1 ----
            label1.setText("bis zu welchem Datum:");
            panel1.add(label1);
            label1.setBounds(5, 55, 140, label1.getPreferredSize().height);
            panel1.add(jDateChooser);
            jDateChooser.setBounds(155, 45, 110, 23);

            {
                // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < panel1.getComponentCount(); i++) {
                    Rectangle bounds = panel1.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = panel1.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                panel1.setMinimumSize(preferredSize);
                panel1.setPreferredSize(preferredSize);
            }
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(38, Short.MAX_VALUE))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panel1, GroupLayout.PREFERRED_SIZE, 144, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE))
        );
        setSize(475, 195);
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReduzierenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEndeActionPerformed
        // TODO add your handling code here:
        if (conn != null) {
            try {
                SQLAnfrage = conn.createStatement();
                SQLAnfrage2 = conn.createStatement();
            } catch (SQLException ex) {
                ModulHelferlein.Fehlermeldung("Datenbank reduzieren","SQL-Exception",ex.getMessage());
            }
            if (JOptionPane.showConfirmDialog(null,
                    "Soll die Datenbank wirklich reduziert werden?",
                    "Bestätigung",
                    JOptionPane.YES_NO_OPTION) == 0) {
                java.util.Date vonDate = jDateChooser.getDate();
                System.out.println("Dialog Datenbank reduzieren bis einschließlich " + ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate));
                try {
                    CarolaHartmannMilesVerlag.backupDatenbank("miles-verlag.reduzieren-backup-");
                    SQL = "DELETE FROM TBL_AUFGABEN " +
                            "WHERE AUFGABE_DATUM <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Aufgaben wurde reduziert");
                    
                    SQL = "DELETE FROM TBL_AUSGABEN " +
                            "WHERE AUSGABEN_BEZAHLT <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Ausgaben wurde reduziert");

                    SQL = "DELETE FROM TBL_BRIEFE " +
                            "WHERE BRIEFE_DATUM <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Briefe wurde reduziert");
                    
                    SQL = "DELETE FROM TBL_EINNAHMEN " +
                            "WHERE EINNAHMEN_BEZAHLT <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Einnahmen wurde reduziert");

                    SQL = "DELETE FROM TBL_TERMINE " +
                             "WHERE TERMIN_DATUM <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Termine wurde reduziert");
                    
                    SQL = "SELECT * FROM TBL_BESTELLUNG " +
                             "WHERE BESTELLUNG_BEZAHLT <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    result = SQLAnfrage.executeQuery(SQL);
                    while (result.next()) {
                        SQL = "DELETE FROM TBL_BESTELLUNG_DETAIL " +
                             "WHERE BESTELLUNG_DETAIL_RECHNR = '" + 
                             result.getString("BESTELLUNG_RECHNR") +
                            "'";
                        SQLAnfrage2.executeUpdate(SQL);
                    }
                    ModulHelferlein.Infomeldung("Tabelle Bestellung_Details wurde reduziert");
                    SQL = "DELETE FROM TBL_BESTELLUNG " +
                             "WHERE BESTELLUNG_BEZAHLT <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Bestellung wurde reduziert");
                    
                    SQL = "SELECT * FROM TBL_REZENSIONEN_AUS " +
                             "WHERE REZENSIONEN_AUS_DATUM <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    result = SQLAnfrage.executeQuery(SQL);
                    while (result.next()) {
                        SQL = "DELETE FROM TBL_REZENSIONEN_AUS_DETAIL " +
                             "WHERE REZENSIONEN_AUS_DETAIL_NUMMER = '" + 
                             result.getString("REZENSIONEN_AUS_NUMMER") +
                            "'";
                        SQLAnfrage2.executeUpdate(SQL);
                    }
                    ModulHelferlein.Infomeldung("Tabelle Rezensionen_Aus_Details wurde reduziert");
                    SQL = "DELETE FROM TBL_BESTELLUNG " +
                             "WHERE BESTELLUNG_BEZAHLT <= '" + 
                            ModulHelferlein.printDateFormat("yyyy-MM-dd", vonDate) +
                            "'";
                    SQLAnfrage.executeUpdate(SQL);
                    ModulHelferlein.Infomeldung("Tabelle Rezensionen_Aus wurde reduziert");
                    
                } catch (SQLException exept) {
                    ModulHelferlein.Fehlermeldung("Datenbank reduzieren","SQL-Exception: Fehler beim Reduzieren der Datenbank:" , exept.getMessage());
                }
            }
            this.dispose();
        }
    }//GEN-LAST:event_jButtonEndeActionPerformed

    private void jButtonSchliessenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSchliessenActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSchliessenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/**        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarolaHartmannMilesVerlag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
*/        
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            _DlgDatenbankReduzieren dialog = new _DlgDatenbankReduzieren(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    dialog.setVisible(false);
                }
            });
            dialog.setVisible(true);
        });
    }

    private Connection conn;
    private Statement SQLAnfrage;
    private Statement SQLAnfrage2;
    private ResultSet result;

    private String SQL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel panel1;
    private JLabel jLabel4;
    private JLabel jLabel2;
    private JButton jButtonEnde;
    private JButton jButtonSchliessen;
    private JLabel label1;
    private JDateChooser jDateChooser;
    // End of variables declaration//GEN-END:variables
}
