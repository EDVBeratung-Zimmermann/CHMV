/*
 *
 * Das JAVA-Programm Miles-Verlag Verlagsverwaltung stellt alle notwendigen
 * Funktionen für die Verwaltung des Carola Hartman Miles-Verlags bereit.
 *
 * Copyright (C) 2017 EDV-Beratung und Betrieb, Entwicklung von SOftware
 *                    Dipl.Inform Thomas Zimmermann
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package milesVerlagMain;

import java.awt.*;
import java.awt.Component;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import com.toedter.calendar.*;
import de.elster.eric.wrapper.CertificateParameters;
import de.elster.eric.wrapper.Eric;
import de.elster.eric.wrapper.EricResult;
import de.elster.eric.wrapper.Errorcode;
import de.elster.eric.wrapper.Finanzamt;
import de.elster.eric.wrapper.FinanzamtLand;
import de.elster.eric.wrapper.PrintParameters;
import de.elster.eric.wrapper.exception.EricException;
import de.elster.eric.wrapper.exception.WrapperException;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Thomas Zimmermann
 */
public class VerwaltenDatenbankUStrVA extends javax.swing.JDialog {

    /**
     * Creates new form VerwaltenDatenbankUStrVA
     * @param parent
     * @param modal
     */
    public VerwaltenDatenbankUStrVA(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new JLabel();
        jPanel3 = new JPanel();
        jLabel9 = new JLabel();
        rbMonat = new JRadioButton();
        rbQuartal = new JRadioButton();
        field_Monat = new JComboBox<>();
        field_Quartal = new JComboBox<>();
        cb10 = new JCheckBox();
        cb22 = new JCheckBox();
        cb29 = new JCheckBox();
        cb26 = new JCheckBox();
        jLabel12 = new JLabel();
        jDateChooser1 = new JDateChooser();
        jLabelID = new JLabel();
        field_ID = new JTextField();
        jLabel10 = new JLabel();
        field_count = new JTextField();
        jLabel11 = new JLabel();
        field_countMax = new JTextField();
        Anfang = new JButton();
        Zurueck = new JButton();
        Vor = new JButton();
        Ende = new JButton();
        Update = new JButton();
        Einfuegen = new JButton();
        Loeschen = new JButton();
        Suchen = new JButton();
        WSuchen = new JButton();
        Drucken = new JButton();
        Schliessen = new JButton();
        jPanel1 = new JPanel();
        jLabel5 = new JLabel();
        field_Zeile12 = new JTextField();
        field_Zeile13_1 = new JTextField();
        field_Zeile13_21 = new JTextField();
        field_Zeile13_22 = new JTextField();
        field_Zeile14 = new JTextField();
        field_Zeile15 = new JTextField();
        jLabel4 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jLabel2 = new JLabel();
        field_Zeile3 = new JTextField();
        field_Zeile4 = new JTextField();
        jLabel3 = new JLabel();
        btnStrNr = new JButton();
        jPanel5 = new JPanel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        jLabel16 = new JLabel();
        jLabel17 = new JLabel();
        jTextField1 = new JTextField();
        jTextField9 = new JTextField();
        jTextField10 = new JTextField();
        jTextField11 = new JTextField();
        jTextField12 = new JTextField();
        jTextField13 = new JTextField();
        jLabel18 = new JLabel();
        jLabel19 = new JLabel();
        jTextField14 = new JTextField();
        jTextField15 = new JTextField();
        Speichern = new JButton();
        Testen = new JButton();
        Senden = new JButton();
        jDayChooser1 = new JDayChooser();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Carola Hartmann Miles Verlag");
        setResizable(false);
        Container contentPane = getContentPane();
        contentPane.setLayout(null);

        //---- jLabel1 ----
        jLabel1.setFont(new Font("Tahoma", Font.BOLD, 12));
        jLabel1.setText("Umsatzsteuervoranmeldung");
        contentPane.add(jLabel1);
        jLabel1.setBounds(10, 13, 222, jLabel1.getPreferredSize().height);

        //======== jPanel3 ========
        {

            //---- jLabel9 ----
            jLabel9.setText("Voranmeldungszeitraum");

            //---- rbMonat ----
            rbMonat.setText("monatlich");

            //---- rbQuartal ----
            rbQuartal.setText("Quartalsweise");

            //---- field_Monat ----
            field_Monat.setModel(new DefaultComboBoxModel<>(new String[] {
                "Item 1",
                "Item 2",
                "Item 3",
                "Item 4"
            }));

            //---- field_Quartal ----
            field_Quartal.setModel(new DefaultComboBoxModel<>(new String[] {
                "Item 1",
                "Item 2",
                "Item 3",
                "Item 4"
            }));

            //---- cb10 ----
            cb10.setText("Berichtigung");

            //---- cb22 ----
            cb22.setText("Belege sind beigef\u00fcgt");

            //---- cb29 ----
            cb29.setText("Verrechnung des Erstattungsbetrages");

            //---- cb26 ----
            cb26.setText("SEPA-Lastschrift wird widersprochen");

            //---- jLabel12 ----
            jLabel12.setText("Datum");

            GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup()
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb26)
                            .addComponent(cb29)
                            .addComponent(cb22)
                            .addComponent(cb10)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup()
                                    .addComponent(rbMonat)
                                    .addComponent(rbQuartal))
                                .addGap(11, 11, 11)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(field_Monat, GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                    .addComponent(field_Quartal)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup()
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(rbMonat)
                            .addComponent(field_Monat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(rbQuartal)
                            .addComponent(field_Quartal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb10)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb22)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb29)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb26)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup()
                            .addComponent(jLabel12)
                            .addComponent(jDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
        }
        contentPane.add(jPanel3);
        jPanel3.setBounds(new Rectangle(new Point(10, 39), jPanel3.getPreferredSize()));

        //---- jLabelID ----
        jLabelID.setText("ID");
        contentPane.add(jLabelID);
        jLabelID.setBounds(new Rectangle(new Point(397, 14), jLabelID.getPreferredSize()));

        //---- field_ID ----
        field_ID.setEditable(false);
        field_ID.setText("0000");
        field_ID.setEnabled(false);
        field_ID.setFocusable(false);
        field_ID.setMaximumSize(new Dimension(30, 20));
        field_ID.setMinimumSize(new Dimension(30, 20));
        contentPane.add(field_ID);
        field_ID.setBounds(412, 11, 33, field_ID.getPreferredSize().height);

        //---- jLabel10 ----
        jLabel10.setText("Datensatz Nr.");
        contentPane.add(jLabel10);
        jLabel10.setBounds(new Rectangle(new Point(463, 14), jLabel10.getPreferredSize()));

        //---- field_count ----
        field_count.setEditable(false);
        field_count.setText("000");
        field_count.setEnabled(false);
        field_count.setFocusable(false);
        field_count.setMaximumSize(new Dimension(30, 20));
        field_count.setMinimumSize(new Dimension(30, 20));
        field_count.setPreferredSize(new Dimension(30, 20));
        contentPane.add(field_count);
        field_count.setBounds(534, 11, 33, field_count.getPreferredSize().height);

        //---- jLabel11 ----
        jLabel11.setText("von");
        contentPane.add(jLabel11);
        jLabel11.setBounds(new Rectangle(new Point(571, 14), jLabel11.getPreferredSize()));

        //---- field_countMax ----
        field_countMax.setEditable(false);
        field_countMax.setText("000");
        field_countMax.setEnabled(false);
        field_countMax.setFocusable(false);
        field_countMax.setMaximumSize(new Dimension(30, 20));
        field_countMax.setMinimumSize(new Dimension(30, 20));
        contentPane.add(field_countMax);
        field_countMax.setBounds(593, 11, 33, field_countMax.getPreferredSize().height);

        //---- Anfang ----
        Anfang.setText("<<");
        Anfang.setToolTipText("Gehe zum Anfang - erster Datensatz");
        Anfang.setMaximumSize(new Dimension(20, 23));
        Anfang.setMinimumSize(new Dimension(20, 23));
        Anfang.setPreferredSize(new Dimension(50, 23));
        Anfang.addActionListener(e -> AnfangActionPerformed(e));
        contentPane.add(Anfang);
        Anfang.setBounds(10, 484, 49, Anfang.getPreferredSize().height);

        //---- Zurueck ----
        Zurueck.setText("<");
        Zurueck.setToolTipText("Gehe zum vorherigen Datensatz");
        Zurueck.setMaximumSize(new Dimension(20, 23));
        Zurueck.setMinimumSize(new Dimension(20, 23));
        Zurueck.setPreferredSize(new Dimension(50, 23));
        Zurueck.addActionListener(e -> ZurueckActionPerformed(e));
        contentPane.add(Zurueck);
        Zurueck.setBounds(new Rectangle(new Point(65, 484), Zurueck.getPreferredSize()));

        //---- Vor ----
        Vor.setText(">");
        Vor.setToolTipText("Gehe zum n\u00e4chsten Datensatz");
        Vor.setMaximumSize(new Dimension(20, 23));
        Vor.setMinimumSize(new Dimension(20, 23));
        Vor.setPreferredSize(new Dimension(50, 23));
        Vor.addActionListener(e -> VorActionPerformed(e));
        contentPane.add(Vor);
        Vor.setBounds(new Rectangle(new Point(125, 484), Vor.getPreferredSize()));

        //---- Ende ----
        Ende.setText(">>");
        Ende.setToolTipText("Gehe zum Ende - zum letzten Datensatz");
        Ende.setMaximumSize(new Dimension(20, 23));
        Ende.setMinimumSize(new Dimension(20, 23));
        Ende.setPreferredSize(new Dimension(50, 23));
        Ende.addActionListener(e -> EndeActionPerformed(e));
        contentPane.add(Ende);
        Ende.setBounds(new Rectangle(new Point(181, 484), Ende.getPreferredSize()));

        //---- Update ----
        Update.setText("!");
        Update.setToolTipText("Datensatz aktualisieren");
        Update.setMaximumSize(new Dimension(20, 23));
        Update.setMinimumSize(new Dimension(20, 23));
        Update.setPreferredSize(new Dimension(50, 23));
        Update.addActionListener(e -> UpdateActionPerformed(e));
        contentPane.add(Update);
        Update.setBounds(new Rectangle(new Point(249, 484), Update.getPreferredSize()));

        //---- Einfuegen ----
        Einfuegen.setText("+");
        Einfuegen.setToolTipText("Datensatz einf\u00fcgen");
        Einfuegen.setMaximumSize(new Dimension(20, 23));
        Einfuegen.setMinimumSize(new Dimension(20, 23));
        Einfuegen.setPreferredSize(new Dimension(50, 23));
        Einfuegen.addActionListener(e -> EinfuegenActionPerformed(e));
        contentPane.add(Einfuegen);
        Einfuegen.setBounds(new Rectangle(new Point(305, 484), Einfuegen.getPreferredSize()));

        //---- Loeschen ----
        Loeschen.setText("-");
        Loeschen.setToolTipText("Datensatz l\u00f6schen");
        Loeschen.setMaximumSize(new Dimension(20, 23));
        Loeschen.setMinimumSize(new Dimension(20, 23));
        Loeschen.setPreferredSize(new Dimension(50, 23));
        Loeschen.addActionListener(e -> LoeschenActionPerformed(e));
        contentPane.add(Loeschen);
        Loeschen.setBounds(new Rectangle(new Point(361, 484), Loeschen.getPreferredSize()));

        //---- Suchen ----
        Suchen.setText("?");
        Suchen.setToolTipText("Datensatz suchen");
        Suchen.setMaximumSize(new Dimension(20, 23));
        Suchen.setMinimumSize(new Dimension(20, 23));
        Suchen.setPreferredSize(new Dimension(50, 23));
        Suchen.addActionListener(e -> SuchenActionPerformed(e));
        contentPane.add(Suchen);
        Suchen.setBounds(new Rectangle(new Point(429, 484), Suchen.getPreferredSize()));

        //---- WSuchen ----
        WSuchen.setText("...");
        WSuchen.setToolTipText("Weitersuchen");
        WSuchen.setMaximumSize(new Dimension(20, 23));
        WSuchen.setMinimumSize(new Dimension(20, 23));
        WSuchen.setPreferredSize(new Dimension(50, 23));
        WSuchen.addActionListener(e -> WSuchenActionPerformed(e));
        contentPane.add(WSuchen);
        WSuchen.setBounds(new Rectangle(new Point(485, 484), WSuchen.getPreferredSize()));

        //---- Drucken ----
        Drucken.setText("D");
        Drucken.setToolTipText("Liste der Ausgaben drucken");
        Drucken.setMaximumSize(new Dimension(20, 23));
        Drucken.setMinimumSize(new Dimension(20, 23));
        Drucken.setPreferredSize(new Dimension(50, 23));
        Drucken.addActionListener(e -> DruckenActionPerformed(e));
        contentPane.add(Drucken);
        Drucken.setBounds(new Rectangle(new Point(553, 484), Drucken.getPreferredSize()));

        //---- Schliessen ----
        Schliessen.setText("X");
        Schliessen.setMaximumSize(new Dimension(20, 23));
        Schliessen.setMinimumSize(new Dimension(20, 23));
        Schliessen.setPreferredSize(new Dimension(50, 23));
        Schliessen.addActionListener(e -> SchliessenActionPerformed(e));
        contentPane.add(Schliessen);
        Schliessen.setBounds(new Rectangle(new Point(609, 484), Schliessen.getPreferredSize()));

        //======== jPanel1 ========
        {

            //---- jLabel5 ----
            jLabel5.setText("Unternehmen");

            //---- field_Zeile12 ----
            field_Zeile12.setText("jTextField3");

            //---- field_Zeile13_1 ----
            field_Zeile13_1.setText("jTextField3");

            //---- field_Zeile13_21 ----
            field_Zeile13_21.setText("jTextField5");

            //---- field_Zeile13_22 ----
            field_Zeile13_22.setText("jTextField7");

            //---- field_Zeile14 ----
            field_Zeile14.setText("jTextField6");

            //---- field_Zeile15 ----
            field_Zeile15.setText("jTextField8");

            //---- jLabel4 ----
            jLabel4.setText("Stra\u00dfe");

            //---- jLabel6 ----
            jLabel6.setText("PLZ, Ort");

            //---- jLabel7 ----
            jLabel7.setText("Telefon");

            //---- jLabel8 ----
            jLabel8.setText("E-Mail");

            //---- jLabel2 ----
            jLabel2.setText("Steuernummer");

            //---- field_Zeile3 ----
            field_Zeile3.setText("jTextField1");

            //---- field_Zeile4 ----
            field_Zeile4.setText("jTextField2");

            //---- jLabel3 ----
            jLabel3.setText("Finanzamt");

            //---- btnStrNr ----
            btnStrNr.setText("Steuernummer & Finanzamt w\u00e4hlen");
            btnStrNr.addActionListener(e -> btnStrNrActionPerformed(e));

            GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(field_Zeile13_21, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_Zeile13_22))
                                    .addComponent(field_Zeile13_1, GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                    .addComponent(field_Zeile12)))
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(field_Zeile3, GroupLayout.Alignment.TRAILING)
                                    .addComponent(field_Zeile14, GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                    .addComponent(field_Zeile15)
                                    .addComponent(field_Zeile4)))
                            .addComponent(btnStrNr, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(field_Zeile12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile13_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile13_21, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_Zeile13_22, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(field_Zeile4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStrNr))
            );
        }
        contentPane.add(jPanel1);
        jPanel1.setBounds(332, 39, jPanel1.getPreferredSize().width, 222);

        //======== jPanel5 ========
        {

            //---- jLabel13 ----
            jLabel13.setText("I. Anmeldung der Umsatzsteuervorauszahlung");

            //---- jLabel14 ----
            jLabel14.setText("Steuerpflichtige Ums\u00e4tze");

            //---- jLabel15 ----
            jLabel15.setText("zu 19%");

            //---- jLabel16 ----
            jLabel16.setText("zu 7%");

            //---- jLabel17 ----
            jLabel17.setText("andere Steuers\u00e4tze");

            //---- jTextField1 ----
            jTextField1.setText("jTextField1");

            //---- jTextField9 ----
            jTextField9.setText("jTextField9");

            //---- jTextField10 ----
            jTextField10.setText("jTextField10");

            //---- jTextField11 ----
            jTextField11.setText("jTextField11");

            //---- jTextField12 ----
            jTextField12.setText("jTextField12");

            //---- jTextField13 ----
            jTextField13.setText("jTextField13");

            //---- jLabel18 ----
            jLabel18.setText("abziehbare Vorsteuerbetr\u00e4ge");

            //---- jLabel19 ----
            jLabel19.setText("verbleibende Umsatzsteuervorauszahlung");

            //---- jTextField14 ----
            jTextField14.setText("jTextField14");

            //---- jTextField15 ----
            jTextField15.setText("jTextField15");

            //---- Speichern ----
            Speichern.setText("v");
            Speichern.setToolTipText("Liste der Ausgaben drucken");
            Speichern.setMaximumSize(new Dimension(20, 23));
            Speichern.setMinimumSize(new Dimension(20, 23));
            Speichern.setPreferredSize(new Dimension(50, 23));
            Speichern.addActionListener(e -> SpeichernActionPerformed(e));

            //---- Testen ----
            Testen.setText("T");
            Testen.setToolTipText("Liste der Ausgaben drucken");
            Testen.setMaximumSize(new Dimension(20, 23));
            Testen.setMinimumSize(new Dimension(20, 23));
            Testen.setPreferredSize(new Dimension(50, 23));
            Testen.addActionListener(e -> TestenActionPerformed(e));

            //---- Senden ----
            Senden.setText("^");
            Senden.setToolTipText("Liste der Ausgaben drucken");
            Senden.setMaximumSize(new Dimension(20, 23));
            Senden.setMinimumSize(new Dimension(20, 23));
            Senden.setPreferredSize(new Dimension(50, 23));
            Senden.addActionListener(e -> SendenActionPerformed(e));

            GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
            jPanel5.setLayout(jPanel5Layout);
            jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup()
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup()
                            .addComponent(jLabel13)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel5Layout.createParallelGroup()
                                    .addComponent(jLabel15)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup()
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel17))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField9)
                                            .addComponent(jTextField1)
                                            .addComponent(jTextField10, GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup()
                                    .addComponent(jTextField13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup()
                                            .addComponent(jTextField11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addGap(82, 82, 82)
                                                .addComponent(jTextField14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Speichern, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Testen, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Senden, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup()
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jTextField14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jTextField15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(Speichern, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(Testen, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(Senden, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(19, Short.MAX_VALUE))
            );
        }
        contentPane.add(jPanel5);
        jPanel5.setBounds(10, 279, 668, jPanel5.getPreferredSize().height);

        { // compute preferred size
            Dimension preferredSize = new Dimension();
            for(int i = 0; i < contentPane.getComponentCount(); i++) {
                Rectangle bounds = contentPane.getComponent(i).getBounds();
                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
            }
            Insets insets = contentPane.getInsets();
            preferredSize.width += insets.right;
            preferredSize.height += insets.bottom;
            contentPane.setMinimumSize(preferredSize);
            contentPane.setPreferredSize(preferredSize);
        }
        setSize(680, 550);
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void SuchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuchenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SuchenActionPerformed

    private void WSuchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WSuchenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WSuchenActionPerformed

    private void DruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DruckenActionPerformed
        // TODO add your handling code here:
        _DlgUebersichtAusgaben.main(null);
    }//GEN-LAST:event_DruckenActionPerformed

    private void SchliessenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchliessenActionPerformed
        // TODO add your handling code here:
        try {
            result.close();
            SQLAnfrage.close();
            conn.close();
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
        this.dispose();
    }//GEN-LAST:event_SchliessenActionPerformed

    private void ZurueckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZurueckActionPerformed
        // TODO add your handling code here:
        try {
            if (result.previous()) {
                count = count - 1;
                field_count.setText(Integer.toString(count));
                // Schalterzustand anpassen
                if (count > 1) {
                    Anfang.setEnabled(true);
                    Zurueck.setEnabled(true);
                } else {
                    Anfang.setEnabled(false);
                    Zurueck.setEnabled(false);
                }
                Vor.setEnabled(true);
                Ende.setEnabled(true);
                Update.setEnabled(true);
                Einfuegen.setEnabled(true);
                Loeschen.setEnabled(true);
                Suchen.setEnabled(true);
                WSuchen.setEnabled(true);
                Drucken.setEnabled(true);
                Schliessen.setEnabled(true);
            } else {
                result.next();
            }
            field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_ZurueckActionPerformed

    private void AnfangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnfangActionPerformed
        // TODO add your handling code here:
        try {
            result.first();
            count = 1;
            field_count.setText(Integer.toString(count));

            // Schalterzustand anpassen
            Anfang.setEnabled(false);
            Zurueck.setEnabled(false);
            Vor.setEnabled(true);
            Ende.setEnabled(true);
            Update.setEnabled(true);
            Einfuegen.setEnabled(true);
            Loeschen.setEnabled(true);
            Suchen.setEnabled(true);
            WSuchen.setEnabled(true);
            Drucken.setEnabled(true);
            Schliessen.setEnabled(true);

            field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_AnfangActionPerformed

    private void VorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VorActionPerformed
        // TODO add your handling code here:
        try {
            if (result.next()) {
                count = count + 1;
                field_count.setText(Integer.toString(count));
                // Schalterzustand anpassen
                if (count < countMax) {
                    Ende.setEnabled(true);
                    Vor.setEnabled(true);
                } else {
                    Ende.setEnabled(false);
                    Vor.setEnabled(false);
                }
                Anfang.setEnabled(true);
                Zurueck.setEnabled(true);
                Update.setEnabled(true);
                Einfuegen.setEnabled(true);
                Loeschen.setEnabled(true);
                Suchen.setEnabled(true);
                WSuchen.setEnabled(true);
                Drucken.setEnabled(true);
                Schliessen.setEnabled(true);
            } else {
                result.previous();
                // Schalterzustände anpassen
                Anfang.setEnabled(true);
                Zurueck.setEnabled(true);
                Vor.setEnabled(false);
                Ende.setEnabled(false);
                Update.setEnabled(true);
                Einfuegen.setEnabled(true);
                Loeschen.setEnabled(true);
                Suchen.setEnabled(true);
                WSuchen.setEnabled(true);
                Drucken.setEnabled(true);
                Schliessen.setEnabled(true);
            }
            field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_VorActionPerformed

    private void EndeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndeActionPerformed
        // TODO add your handling code here:
        try {
            result.last();
            count = countMax;
            field_count.setText(Integer.toString(count));

            // Schalterzustand anpassen
            Anfang.setEnabled(true);
            Zurueck.setEnabled(true);
            Vor.setEnabled(false);
            Ende.setEnabled(false);
            Update.setEnabled(true);
            Einfuegen.setEnabled(true);
            Loeschen.setEnabled(true);
            Suchen.setEnabled(true);
            WSuchen.setEnabled(true);
            Drucken.setEnabled(true);
            Schliessen.setEnabled(true);

            field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_EndeActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        try {
//            if (Modulhelferlein.checkNumberFormatInt(field_Ustr.getText()) < 0) {
//                Modulhelferlein.Infomeldung("fehlerhafte Eingabe - die ist keine korrekte Ganzzahl");
//            } else {
//                if (Modulhelferlein.checkNumberFormatFloat(field_Betrag.getText()) < 0) {
//                    Modulhelferlein.Infomeldung("fehlerhafte Eingabe - die ist keine korrekte Zahl");
//                } else {
                    result.updateRow();
//                }
//            }
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void EinfuegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EinfuegenActionPerformed
        // TODO add your handling code here:
        int ID;

        try {
            if (resultIsEmpty) {
                ID = 1;
            } else {
                result.last();
                ID = 1 + result.getInt(1);
            }

            result.moveToInsertRow();
            result.updateInt("Ausgaben_ID", ID);
            result.updateString("Ausgaben_RECHNNR", "");
            result.updateDate("Ausgaben_RECHDATUM", Modulhelferlein.Date2SQLDate(Modulhelferlein.CurDate));
            result.updateString("Ausgaben_BESCHREIBUNG", "");
            result.updateFloat("Ausgaben_KOSTEN", 0);
            result.updateDate("Ausgaben_BEZAHLT", Modulhelferlein.Date2SQLDate(new Date(0)));
            result.updateInt("Ausgaben_Ustr", 19);
            result.updateInt("Ausgaben_TYP", 0);
            result.updateString("Ausgaben_LIEFERANT", "");
            result.updateString("AUSGABEN_LINK", "");
            result.insertRow();
            countMax = countMax + 1;
            field_countMax.setText(Integer.toString(countMax));
            count = countMax;
            field_count.setText(Integer.toString(count));

            // Schalterzustand anpassen
            Anfang.setEnabled(true);
            Zurueck.setEnabled(true);
            Vor.setEnabled(false);
            Ende.setEnabled(false);
            Update.setEnabled(true);
            Einfuegen.setEnabled(true);
            Loeschen.setEnabled(true);
            Suchen.setEnabled(true);
            WSuchen.setEnabled(true);
            Drucken.setEnabled(true);
            Schliessen.setEnabled(true);

            resultIsEmpty = false;
            result.last();
            field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));
        } catch (SQLException exept) {
            Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
        }
    }//GEN-LAST:event_EinfuegenActionPerformed

    private void LoeschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoeschenActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Soll der Datensatz wirklich gelöscht werden?") == JOptionPane.YES_OPTION) {
            try {
                result.deleteRow();
                countMax = countMax - 1;
                field_countMax.setText(Integer.toString(countMax));
                count = 1;
                field_count.setText(Integer.toString(count));

                result.first();
                if (countMax > 0) {
                    field_ID.setText(Integer.toString(result.getInt("Ausgaben_ID")));

                    // Schalterzustand anpassen
                    Anfang.setEnabled(true);
                    Zurueck.setEnabled(true);
                    Vor.setEnabled(true);
                    Ende.setEnabled(true);
                    Update.setEnabled(true);
                    Einfuegen.setEnabled(true);
                    Loeschen.setEnabled(true);
                    Suchen.setEnabled(true);
                    WSuchen.setEnabled(true);
                    Drucken.setEnabled(true);
                    Schliessen.setEnabled(true);
                } else {
                    resultIsEmpty = true;
                    field_ID.setText("");

                    // Schalterzustand anpassen
                    Anfang.setEnabled(false);
                    Zurueck.setEnabled(false);
                    Vor.setEnabled(false);
                    Ende.setEnabled(false);
                    Update.setEnabled(false);
                    Einfuegen.setEnabled(true);
                    Loeschen.setEnabled(false);
                    Suchen.setEnabled(false);
                    WSuchen.setEnabled(false);
                    Drucken.setEnabled(false);
                    Schliessen.setEnabled(true);
                }
            } catch (SQLException exept) {
                Modulhelferlein.Fehlermeldung("SQL-Exception: " + exept.getMessage());
            }
        }
    }//GEN-LAST:event_LoeschenActionPerformed

    private void SpeichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeichernActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SpeichernActionPerformed

    private void TestenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TestenActionPerformed

    private void SendenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SendenActionPerformed

    private void btnStrNrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStrNrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStrNrActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/**        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarolaHartmannMilesVerlag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
*/        
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            VerwaltenDatenbankUStrVA dialog = new VerwaltenDatenbankUStrVA(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    dialog.dispose();
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel jLabel1;
    private JPanel jPanel3;
    private JLabel jLabel9;
    private JRadioButton rbMonat;
    private JRadioButton rbQuartal;
    private JComboBox<String> field_Monat;
    private JComboBox<String> field_Quartal;
    private JCheckBox cb10;
    private JCheckBox cb22;
    private JCheckBox cb29;
    private JCheckBox cb26;
    private JLabel jLabel12;
    private JDateChooser jDateChooser1;
    private JLabel jLabelID;
    private JTextField field_ID;
    private JLabel jLabel10;
    private JTextField field_count;
    private JLabel jLabel11;
    private JTextField field_countMax;
    private JButton Anfang;
    private JButton Zurueck;
    private JButton Vor;
    private JButton Ende;
    private JButton Update;
    private JButton Einfuegen;
    private JButton Loeschen;
    private JButton Suchen;
    private JButton WSuchen;
    private JButton Drucken;
    private JButton Schliessen;
    private JPanel jPanel1;
    private JLabel jLabel5;
    private JTextField field_Zeile12;
    private JTextField field_Zeile13_1;
    private JTextField field_Zeile13_21;
    private JTextField field_Zeile13_22;
    private JTextField field_Zeile14;
    private JTextField field_Zeile15;
    private JLabel jLabel4;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel2;
    private JTextField field_Zeile3;
    private JTextField field_Zeile4;
    private JLabel jLabel3;
    private JButton btnStrNr;
    private JPanel jPanel5;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel17;
    private JTextField jTextField1;
    private JTextField jTextField9;
    private JTextField jTextField10;
    private JTextField jTextField11;
    private JTextField jTextField12;
    private JTextField jTextField13;
    private JLabel jLabel18;
    private JLabel jLabel19;
    private JTextField jTextField14;
    private JTextField jTextField15;
    private JButton Speichern;
    private JButton Testen;
    private JButton Senden;
    private JDayChooser jDayChooser1;
    // End of variables declaration//GEN-END:variables

    Integer count = 0;
    Integer countMax = 0;

    Connection conn;
    Statement SQLAnfrage;
    Statement SQLAnfrage2;
    Statement SQLAnfrage3;
    ResultSet result;
    ResultSet result2;
    ResultSet result3;

    Statement SQLAnfrageBest;
    Statement SQLAnfrageBuch;
    Statement SQLAnfragePreis;
    ResultSet resultBest;
    ResultSet resultBuch;
    ResultSet resultPreis;

    boolean resultIsEmpty = true;
    boolean boolXMLgetestet = false;
    boolean boolXMLgespeichert = false;

    FileWriter writer;
    File file;

    String strXMLdatei = "";
    String Finanzamtname = "";
    String Finanzamtnummer = "";
    String FinanzamtTelefon = "";
    String FinanzamtErgaenzung = "";
    String FinanzamtStrasse = "";
    String FinanzamtPLZOrt = "";
    String FinanzamteMail = "";
    String FinanzamtBank = "";
    String FinanzamtIBAN = "";
    String FinanzamtBIC = "";

    String von = "";
    String bis = "";

    Eric eric;
    List<FinanzamtLand> finanzamtLaender = null;
    List<Finanzamt> finanzaemter = new ArrayList<>();

    String certificate = "";
    String certificatePin = "";
    String ericPath = getCurrentDirectory();
    String logPath = getCurrentDirectory();

    String Testmerker = "700000004";
    String datenartVersion = "UStVA_2015";
    String steuersatz = "";
    String outputFileName = "";

    Double UStr81 = 0D;
    Double UStr83 = 0D;
    Double UStr86 = 0D;
    Double UStr66 = 0D;
    Double UStr35 = 0D;
    Double Gesamtsumme = 0D;
    Double Netto = 0D;
    Double Ustr = 0D;
    Double BestellungZeile = 0D;
    Double GesamtNetto = 0D;
    Double GesamtUstr = 0D;
    
    final JFrame f4 = new JFrame("Carola Hartmann Miles Verlag - Verlagsverwaltung");
    final JFrame f5 = new JFrame("Carola Hartmann Miles Verlag - Verlagsverwaltung");

    JButton btnSchliessen = new JButton("Schließen");
    JButton btnSchliessen5 = new JButton("Schließen");
    JButton btnSpeichern5 = new JButton("Speichern");
    
    private JComboBox<String> cbLaender = new JComboBox<>();
    private JComboBox<String> cbFALaender = new JComboBox<>();

    

    private static String getCurrentDirectory() {
        return new File(".").getAbsolutePath();
    }

    /**
     * Prüfe eine einzelne Steuernummer
     */
    private boolean checkStNr(Eric eric, String stNr) {
        Errorcode rc = eric.checkStNr(stNr);
        if (rc == Errorcode.ERIC_OK) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Lese eine Datei in ein Byte-Array
     */
    private static byte[] readFile(File file) throws IOException {
        try (RandomAccessFile f = new RandomAccessFile(file, "r")) {
            byte[] data = new byte[(int) file.length()];
            f.readFully(data);
            return data;
        }
    }
    
    /**
     * Validiere und Sende Steuerfall
     */
    private void validateAndSendTaxCase(Eric eric, Boolean einreichen) throws EricException, WrapperException {
        f4.setSize(500, 300);
        f4.setResizable(false);
        f4.setLayout(null);
        f4.setLocation(220, 80);

        JLabel Titel = new JLabel("Validiere und sende den Steuerfall");
        f4.add(Titel);
        Titel.setBounds(10, 10, 200, 20);

        JLabel lblLese = new JLabel("-> lese Steuersatz ...");
        lblLese.setBounds(10, 50, 390, 20);
        lblLese.setVisible(false);
        f4.add(lblLese);

        JLabel lblfertig_0 = new JLabel("... fertig");
        lblfertig_0.setBounds(400, 50, 100, 20);
        lblfertig_0.setVisible(false);
        f4.add(lblfertig_0);

        JLabel lblVal = new JLabel("-> validiere Steuersatz ...");
        lblVal.setBounds(10, 80, 390, 20);
        lblVal.setVisible(false);
        f4.add(lblVal);

        JLabel lblfertig_1 = new JLabel("... fertig");
        lblfertig_1.setBounds(400, 80, 100, 20);
        lblfertig_1.setVisible(false);
        f4.add(lblfertig_1);

        JLabel lblEVal = new JLabel("");
        lblEVal.setBounds(10, 110, 390, 20);
        lblEVal.setVisible(false);
        f4.add(lblEVal);

        JLabel lblSD = new JLabel("-> Sende und drucke den Steuerdatensatz...");
        lblSD.setBounds(10, 140, 390, 20);
        lblSD.setVisible(false);
        f4.add(lblSD);

        JLabel lblAut = new JLabel("    - mit Authentisierung ...");
        lblAut.setBounds(10, 170, 390, 20);
        lblAut.setVisible(false);
        f4.add(lblAut);

        JLabel lblfertig_2 = new JLabel("... fertig");
        lblfertig_2.setBounds(400, 170, 200, 20);
        lblfertig_2.setVisible(false);
        f4.add(lblfertig_2);

        JLabel lblESD = new JLabel("");
        lblESD.setBounds(10, 110, 390, 20);
        lblESD.setVisible(false);
        f4.add(lblESD);

        JLabel lblfertig_3 = new JLabel("... fertig");
        lblfertig_2.setBounds(400, 140, 200, 20);
        lblfertig_3.setVisible(false);
        f4.add(lblfertig_3);

        btnSchliessen.setBounds(200, 200, 100, 30);
        btnSchliessen.setVisible(false);
        //btnSchliessen.addActionListener(this);
        f4.add(btnSchliessen);

        f4.setVisible(true);
        lblLese.setVisible(true);

        String edsXml;

        try {
            edsXml = new String(readFile(new File(steuersatz)), "ISO-8859-15");
            //edsXml = new String(readFile(new File("20150222-Steuerdatensatz-Miles-Verlag.xml")),	"ISO-8859-15");
            lblfertig_0.setVisible(true);
            lblVal.setVisible(true);

            EricResult res;
            try {
                res = eric.validate(datenartVersion, edsXml);
                //res = eric.validate("UStVA_2015", edsXml);
                lblfertig_1.setVisible(true);
                lblEVal.setText("   ... Validierung erfolgreich. " + res);
                lblEVal.setVisible(true);

                if (einreichen) {
                    if (JOptionPane.showConfirmDialog(null, "Soll der Steuerdatensatz gedruckt und versendet werden?") == JOptionPane.YES_OPTION) {
                        lblSD.setVisible(true);

                        CertificateParameters certParams = null;

                        if (certificate != null) {
                            lblAut.setVisible(true);

                            certParams = new CertificateParameters(certificate, certificatePin);
                            //certParams.setCertificatePath(certificate);
                            //certParams.setPin(certificatePin);
                        }

                        Eric.SendResponse sendResponse;
                        sendResponse = eric.sendAndPrint(datenartVersion,
                                //sendResponse = eric.sendAndPrint("UStVA_2015",
                                edsXml,
                                certParams,
                                new PrintParameters(0, 0, 0, outputFileName + ".PDF", null));
                        lblfertig_2.setVisible(true);
                        lblEVal.setText("Senden und Drucken erfolgreich");
                        lblEVal.setVisible(true);
                        try {
                            result.moveToInsertRow();
                            result.updateBoolean("USTVA_GESENDET", true);
                            result.insertRow();
                        } catch (SQLException e1) {
                            Modulhelferlein.Fehlermeldung("SQL-Exception: " + e1.getMessage());
                            //e1.printStackTrace();
                        }
                        // Serverantwort speichern	outputFileName + -return.xml
                        String Serverantwort[] = sendResponse.serverResponse.split("</");
                        file = new File(outputFileName + "-return.xml");
                        try {
                            writer = new FileWriter(file);
                            for (int i = 0; i < Serverantwort.length; i++) {
                                if (i > 0) {
                                    writer.write("</");
                                }
                                writer.write(Serverantwort[i]);
                                writer.write(System.getProperty("line.separator"));
                            }
                            writer.flush();
                            writer.close();
                        } catch (IOException e) {
                            Modulhelferlein.Infomeldung("IO-Exception: " + e.getMessage());
                            //e.printStackTrace();
                        } // try
                    } // if
                } // if test
                btnSchliessen.setVisible(true);
            } catch (de.elster.eric.wrapper.exception.EricException | de.elster.eric.wrapper.exception.WrapperException ex) {
                Logger.getLogger(ModulAbrechnungUSteuerVorA.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (UnsupportedEncodingException e) {
            Modulhelferlein.Fehlermeldung("Unerwartete Java-Ausnahme: " + e);
        } catch (IOException e) {
            Modulhelferlein.Fehlermeldung("Konnte Eingabedatensatz nicht einlesen: " + e);
        } // try

    } // void
 
}
