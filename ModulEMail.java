/*
 *
 * Das JAVA-Programm Miles-Verlag Verlagsverwaltung stellt alle notwendigen
 * Funktionen für die Verwaltung des Carola Hartman Miles-Verlags bereit.
 *
 * Copyright (C) 2017 EDV-Beratung und Betrieb, Entwicklung von SOftware
 *                    Dipl.Inform Thomas Zimmermann
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package milesVerlagMain;

//~--- non-JDK imports --------------------------------------------------------
//~--- JDK imports ------------------------------------------------------------
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Address;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

/**
 *
 * @author Thomas Zimmermann
 */
public class ModulEMail {

    /**
     * Creates new form _DlgMail
     *
     * @param parent
     * @param modal
     */
    public ModulEMail(java.awt.Frame parent, boolean modal) {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private static void MailSenden() {

        // TODO add your handling code here:
        System.out.println("TLSEmail Start");

        // change accordingly 
        String host = Modulhelferlein.MailHost;
        System.out.println("- host     " + host);
        
        String port = Modulhelferlein.MailPort;
        System.out.println("- port     " + port);
        
        String username = Modulhelferlein.MailUser;
        System.out.println("- username " + username);
        
        String password = Modulhelferlein.MailPass;
        System.out.println("- password " + password);
        
        String from = username;
        System.out.println("- from     " + from);

        String to = Empfaenger;
        System.out.println("- to       " + to);
        
        // Get the session object 

        // Get system properties 
        Properties properties = System.getProperties();

        // Setup mail server 
        properties.setProperty("mail.smtp.host", host);

        // SSL Port 
        properties.put("mail.smtp.port", "465");

        // enable authentication 
        properties.put("mail.smtp.auth", "true");

        // SSL Factory 
        properties.put("mail.smtp.socketFactory.class",
                "javax.net.ssl.SSLSocketFactory");

        // creating Session instance referenced to  
        // Authenticator object to pass in  
        // Session.getInstance argument 
        Session session = Session.getDefaultInstance(properties,
                new javax.mail.Authenticator() {

            // override the getPasswordAuthentication  
            // method 
            protected PasswordAuthentication
                    getPasswordAuthentication() {
                return new PasswordAuthentication(username,
                        password);
            }
        });

        //compose the message 
        try {
            // javax.mail.internet.MimeMessage class is mostly  
            // used for abstraction. 
            MimeMessage message = new MimeMessage(session);

            // header field of the header. 
            message.setFrom(new InternetAddress(from));

            //InternetAddress[] addresses = new InternetAddress[2];
            //addresses[0] = new InternetAddress(to);
            //addresses[1] = new InternetAddress(from);            
            //message.setRecipients(Message.RecipientType.TO, addresses);
            message.setRecipient(Message.RecipientType.TO, new InternetAddress(to));
            message.addRecipient(Message.RecipientType.CC, new InternetAddress(from));
            
            // Set Subject: header field
            message.setSubject("Ihre Bestellung vom " + Datum);
            
            // Create a multipar message
            Multipart multipart = new MimeMultipart();

            // Create the message part
            BodyPart messageBodyPart = new MimeBodyPart();

            // Fill the message
            String text = "Herzlichen Dank für Ihre Bestellung. \n";
            
            if (DHL.equals("")) {
                text = text + "Wir haben diese heute per Post/DHL versendet.\n"; 
            } else {
                text = text +  "Wir haben diese heute per Post/DHL versendet. Die Sendungsnummer lautet " + DHL + "\n";
            }
            text = text + "\n"
                        + "Die Rechnung haben wir als Anhang beigefügt."
                        + "\n"
                        + "\n"
                        + "Mit freundlichen Grüßen\n"
                        + Modulhelferlein.CHMVBenutzer+"\n"
                        + "\n"
                        + "Carola Hartmann Miles Verlag\n"
                        + "George Caylay Straße 38\n"
                        + "14089 Berlin\n"
                        + "Telefon +49 (30) 36877788";

            // Set text message part
            messageBodyPart.setText(text);            
            multipart.addBodyPart(messageBodyPart);

            // Part two is attachment
            if (Filename.length() > 0) {
                messageBodyPart = new MimeBodyPart();

                DataSource source = new FileDataSource(Filename);

                messageBodyPart.setDataHandler(new DataHandler(source));
                messageBodyPart.setFileName(Filename);
                multipart.addBodyPart(messageBodyPart);
            }

            // Send the complete message parts
            message.setContent(multipart);
            
            //message.setSubject("Ihre Bestellung vom " + Datum);
            //message.setText("Hello, aas is sending email ");

            // Send message 
            Transport.send(message);
            Modulhelferlein.Infomeldung("Mail wurde gesendet");
            System.out.println("Yo it has been sent..");
        } catch (MessagingException mex) {
            Modulhelferlein.Fehlermeldung("E-Mail-versenden", mex.getMessage());
        }
    }
/**
        
        // Get system properties
        Properties properties = System.getProperties();

        // Setup mail server
        properties.setProperty(
                "mail.smtp.host", host);
        properties.setProperty(
                "mail.smtp.auth", "true");
        properties.setProperty(
                "mail.smtp.port", port);
        properties.setProperty(
                "mail.smtp.starttls.enable", "true");
        properties.setProperty(
                "mail.user", user);
        properties.setProperty(
                "mail.password", pass);

        try {

            // Get the default Session object.
            Session session = Session.getDefaultInstance(properties);
            Transport transport = session.getTransport("smtp");

            transport.connect(host, Integer.parseInt(port), user, pass);

            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

            message.setFrom(new InternetAddress(user));

            // Set To: header field of the header.
            // message.setRecipient(Message.RecipientType.TO, new InternetAddress(field_To.getText()));
            String adressliste = "thomas@familiezimmermann.de," + Empfaenger;

            Address[] addresses;

            addresses = InternetAddress.parse(adressliste);
            message.setRecipients(Message.RecipientType.TO, addresses);

            // Set Subject: header field
            message.setSubject("Ihre Bestellung vom " + Datum);

            // Create the message part
            BodyPart messageBodyPart = new MimeBodyPart();

            // Fill the message
            if (DHL.equals("")) {
                messageBodyPart.setText("Herzlichen Dank für Ihre Bestellung. Wir haben diese heute per Post/DHL versendet.");
            } else {
                messageBodyPart.setText("Herzlichen Dank für Ihre Bestellung. \n"
                        + "Wir haben diese heute per Post/DHL versendet. Die Sendungsnummer lautet " + DHL + "\n"
                        + "\n"
                        + "\n"
                        + "Carola Hartmann Miles Verlag\n"
                        + "George Caylay Straße 38\n"
                        + "14089 Berlin\n"
                        + "Telefon +49 (30) 36877788"
                );
            }

            // Create a multipar message
            Multipart multipart = new MimeMultipart();

            // Set text message part
            multipart.addBodyPart(messageBodyPart);

            // Part two is attachment
            if (Filename.length() > 0) {
                messageBodyPart = new MimeBodyPart();

                DataSource source = new FileDataSource(Filename);

                messageBodyPart.setDataHandler(new DataHandler(source));
                messageBodyPart.setFileName(Filename);
                multipart.addBodyPart(messageBodyPart);
            }

            // Send the complete message parts
            message.setContent(multipart);
            transport.sendMessage(message, addresses);
            Modulhelferlein.Infomeldung("Mail wurde gesendet");
            transport.close();
        } catch (MessagingException mex) {
            Modulhelferlein.Fehlermeldung("E-Mail-versenden", mex.getMessage());
        }
    }
    */
    
// GEN-LAST:event_SendenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Filename
                = args[0];
        KundeID
                = args[1];
        DHL
                = args[3];
        Datum
                = args[4];

        if (KundeID
                .equals("-1")) {
            Empfaenger
                    = args[2];

        } else {

        }
        MailSenden();

    }

    private static String Filename
            = "";
    private static String KundeID
            = "";
    private static String Empfaenger
            = "";
    private static String DHL
            = "";
    private static String Datum
            = "";
}


//~ Formatted by Jindent --- http://www.jindent.com
